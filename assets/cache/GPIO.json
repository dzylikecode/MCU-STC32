{"id":"GPIO","deps":[],"as":{},"info":"","extern":[{"id":"功能模式","info":""},{"id":"寄存器","info":""}],"local":[{"id":"输入浮空","info":"\n\nIO 口的电平完全是由外部电路决定\n\n"},{"id":"输入上拉","info":"\n\n不适合做电流型驱动\n\n"},{"id":"输入下拉","info":"\n\n不适合做电流型驱动\n\n"},{"id":"模拟","info":"\n\n用于 ADC 采集或者 DAC 输出,或者低功耗下省电\n\n"},{"id":"开漏输出","info":"\n\n开漏输出模式是数字电路输出的一种,从结果上看它只能输出低电平 Vss 或者高阻态\n\n"},{"id":"推挽输出","info":"\n\n会输出低电平 VSS 或者高电平 VDD\n\n"},{"id":"开漏式复用功能","info":"\n\nSTM32F4 有很多的内置外设, 比如 USART,SPI,bxCAN 等等,这些外设的外部引脚都是与 GPIO 复用的.也就是说,一个 GPIO 如果可以复用为内置外设的功能引脚,那么当这个 GPIO 作为内置外设使用的时候,就叫做复用.\n\n所谓\"复用功能\",是指单片机的引脚既可以做普通 GPIO 使用,也可以作为内部外设控制器的引脚来使用.\n\n一个 IO 口可以是通用的 IO 口功能,还可以是其他外设的特殊功能引脚,这就是 IO 口的复用功能.一个 IO 口可以是多个外设的功能引脚,我们需要选择作为其中一个外设的功能引脚.当选择复用功能时,引脚的状态是由对应的外设控制,而不是输出数据寄存器.\n\n虽然复用模式的控制信号来自内置外设控制器,但是单片机(CPU)依然可以读取相应的数据.\n\n"},{"id":"推挽式复用功能","info":"\n\n同上\n\n"},{"id":"MODER","info":"\n\nGPIO 端口模式寄存器 (GPIOx_MODER)\n\nGPIO 口模式控制寄存器,用于控制 GPIOx 的工作模式\n\n"},{"id":"OTYPER","info":"\n\nGPIO 端口输出类型寄存器 (GPIOx_OTYPER)\n\n用于控制 GPIOx 的输出类型\n\n"},{"id":"OSPEEDR","info":"\n\nGPIO 端口输出速度寄存器 (GPIOx_OSPEEDR)\n\n该寄存器用于控制 GPIOx 的输出速度\n\n"},{"id":"PUPDR","info":"\n\nGPIO 端口上拉/下拉寄存器 (GPIOx_PUPDR)\n\n该寄存器用于控制 GPIOx 的上拉/下拉\n\n"},{"id":"IDR","info":"\n\n端口输入数据寄存器(IDR)\n\n该寄存器用于获取 GPIOx 的输入高低电平\n\n"},{"id":"ODR","info":"\n\n端口输出数据寄存器(ODR)\n\n该寄存器用于控制 GPIOx 的输出高电平或者低电平\n\n"},{"id":"BSRR","info":"\n\n端口置位/复位寄存器(BSRR)\n\n该寄存器也用于控制 GPIOx 的输出高电平或者低电平\n\n"}]}